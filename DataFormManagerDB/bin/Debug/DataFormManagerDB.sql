/*
Deployment script for DataFormManagerDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DataFormManagerDB"
:setvar DefaultFilePrefix "DataFormManagerDB"
:setvar DefaultDataPath "C:\Users\midhun\AppData\Local\Microsoft\VisualStudio\SSDT\DataFormManager"
:setvar DefaultLogPath "C:\Users\midhun\AppData\Local\Microsoft\VisualStudio\SSDT\DataFormManager"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating [dbo].[Form]...';


GO
CREATE TABLE [dbo].[Form] (
    [FormTypeId] INT            NOT NULL,
    [FormId]     INT            IDENTITY (1, 1) NOT NULL,
    [FormData]   NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_Constraint_FormId] PRIMARY KEY CLUSTERED ([FormId] ASC)
);


GO
PRINT N'Creating [dbo].[FormType]...';


GO
CREATE TABLE [dbo].[FormType] (
    [FormTypeId] INT            NOT NULL,
    [FormName]   VARCHAR (255)  NOT NULL,
    [FormConfig] NVARCHAR (MAX) NOT NULL,
    CONSTRAINT [PK_Constraint_FormTypeId] PRIMARY KEY CLUSTERED ([FormTypeId] ASC)
);


GO
PRINT N'Creating [dbo].[Permission]...';


GO
CREATE TABLE [dbo].[Permission] (
    [PermissionId]    INT           NOT NULL,
    [PermisssionName] VARCHAR (255) NOT NULL,
    CONSTRAINT [PK_Constraint_PermissionId] PRIMARY KEY CLUSTERED ([PermissionId] ASC)
);


GO
PRINT N'Creating [dbo].[RCKRUser]...';


GO
CREATE TABLE [dbo].[RCKRUser] (
    [UserId]   INT           NOT NULL,
    [Username] VARCHAR (255) NOT NULL,
    [Password] VARCHAR (255) NOT NULL,
    [EmailId]  VARCHAR (255) NOT NULL,
    [PhoneNo]  VARCHAR (15)  NOT NULL,
    CONSTRAINT [PK_Constraint_UserId] PRIMARY KEY CLUSTERED ([UserId] ASC),
    CONSTRAINT [UK_Constraint_EmailId] UNIQUE NONCLUSTERED ([EmailId] ASC),
    CONSTRAINT [UK_Constraint_PhoneNo] UNIQUE NONCLUSTERED ([PhoneNo] ASC)
);


GO
PRINT N'Creating [dbo].[Role]...';


GO
CREATE TABLE [dbo].[Role] (
    [RoleId]   INT           NOT NULL,
    [RoleName] VARCHAR (255) NOT NULL,
    CONSTRAINT [PK_Constraint_RoleId] PRIMARY KEY CLUSTERED ([RoleId] ASC)
);


GO
PRINT N'Creating [dbo].[RolePermissions]...';


GO
CREATE TABLE [dbo].[RolePermissions] (
    [PermissionId]     INT NOT NULL,
    [RolePermissionId] INT NOT NULL,
    [RoleId]           INT NOT NULL,
    CONSTRAINT [PK_Constraint_RolePermissionId] PRIMARY KEY CLUSTERED ([RolePermissionId] ASC)
);


GO
PRINT N'Creating [dbo].[UserForms]...';


GO
CREATE TABLE [dbo].[UserForms] (
    [UserId]     INT NOT NULL,
    [FormId]     INT NOT NULL,
    [UserFormId] INT IDENTITY (1, 1) NOT NULL,
    CONSTRAINT [PK_Constraint_UserFormId] PRIMARY KEY CLUSTERED ([UserFormId] ASC)
);


GO
PRINT N'Creating [dbo].[UserRoles]...';


GO
CREATE TABLE [dbo].[UserRoles] (
    [UserRoleId] INT NOT NULL,
    [UserId]     INT NOT NULL,
    [RoleId]     INT NOT NULL,
    CONSTRAINT [PK_Constraint_UserRoleId] PRIMARY KEY CLUSTERED ([UserRoleId] ASC)
);


GO
PRINT N'Creating [dbo].[FK_Constraint_FormTypeId]...';


GO
ALTER TABLE [dbo].[Form] WITH NOCHECK
    ADD CONSTRAINT [FK_Constraint_FormTypeId] FOREIGN KEY ([FormTypeId]) REFERENCES [dbo].[FormType] ([FormTypeId]);


GO
PRINT N'Creating [dbo].[FK_Constraint_PermissionId]...';


GO
ALTER TABLE [dbo].[RolePermissions] WITH NOCHECK
    ADD CONSTRAINT [FK_Constraint_PermissionId] FOREIGN KEY ([PermissionId]) REFERENCES [dbo].[Permission] ([PermissionId]);


GO
PRINT N'Creating [dbo].[FK_Constraint_RoleId2]...';


GO
ALTER TABLE [dbo].[RolePermissions] WITH NOCHECK
    ADD CONSTRAINT [FK_Constraint_RoleId2] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[Role] ([RoleId]);


GO
PRINT N'Creating [dbo].[FK_Constraint_FormId]...';


GO
ALTER TABLE [dbo].[UserForms] WITH NOCHECK
    ADD CONSTRAINT [FK_Constraint_FormId] FOREIGN KEY ([FormId]) REFERENCES [dbo].[Form] ([FormId]);


GO
PRINT N'Creating [dbo].[FK_Constraint_UserId2]...';


GO
ALTER TABLE [dbo].[UserForms] WITH NOCHECK
    ADD CONSTRAINT [FK_Constraint_UserId2] FOREIGN KEY ([UserId]) REFERENCES [dbo].[RCKRUser] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Constraint_RoleId]...';


GO
ALTER TABLE [dbo].[UserRoles] WITH NOCHECK
    ADD CONSTRAINT [FK_Constraint_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[Role] ([RoleId]);


GO
PRINT N'Creating [dbo].[FK_Constraint_UserId]...';


GO
ALTER TABLE [dbo].[UserRoles] WITH NOCHECK
    ADD CONSTRAINT [FK_Constraint_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[RCKRUser] ([UserId]);


GO
PRINT N'Creating [dbo].[Proc_Form_AddReleaseData]...';


GO
CREATE PROCEDURE [dbo].[Proc_Form_AddReleaseData]
@FormData nvarchar(max)
AS 
BEGIN
Insert into Form(FormTypeId,FormData)
values(1,@FormData)
select  SCOPE_IDENTITY() as FormID;
END
GO
PRINT N'Creating [dbo].[Proc_Form_GetUserFormDatas]...';


GO
 create procedure [dbo].[Proc_Form_GetUserFormDatas]
 @UserId int
 As
 begin
 select FormData from Form
 where Form.FormId in (select FormId from UserForms where UserForms.UserId=@UserId)
 end
GO
PRINT N'Creating [dbo].[Proc_RCKRUser_CreateUser]...';


GO
CREATE PROCEDURE [dbo].[Proc_RCKRUser_CreateUser]
@UserId int,
@Username varchar(255),
@Password varchar(255),
@EmailId varchar(255),
@PhoneNo varchar(15)
AS 
BEGIN
INSERT INTO RCKRUser (UserId,Username,Password,EmailId,PhoneNo) 
Values (@UserId,@Username,@Password,@EmailId,@PhoneNo)
END
GO
PRINT N'Creating [dbo].[Proc_RCKRUser_DeleteUser]...';


GO

CREATE PROCEDURE [dbo].[Proc_RCKRUser_DeleteUser]
@UserId int
AS 
BEGIN
DELETE FROM RCKRUser
WHERE UserId=@UserId 
END
GO
PRINT N'Creating [dbo].[Proc_RCKRUser_GetUser]...';


GO
CREATE PROCEDURE [dbo].[Proc_RCKRUser_GetUser]
@UserId int
AS 
BEGIN
SELECT UserId,Username,EmailId,PhoneNo FROM RCKRUser 
WHERE UserId = @UserId
END
GO
PRINT N'Creating [dbo].[Proc_RCKRUser_GetUserList]...';


GO
CREATE PROCEDURE [dbo].[Proc_RCKRUser_GetUserList]
AS 
BEGIN
SELECT UserId,Username,EmailId,PhoneNo FROM RCKRUser 
END
GO
PRINT N'Creating [dbo].[Proc_RCKRUser_UpdateUser]...';


GO
CREATE PROCEDURE [dbo].[Proc_RCKRUser_UpdateUser]
@UserId int,
@EmailId varchar(255),
@PhoneNo varchar(15)
AS 
BEGIN
UPDATE RCKRUser
SET EmailId=@EmailId,PhoneNo=@PhoneNo
WHERE UserId = @UserId;
END
GO
PRINT N'Creating [dbo].[Proc_UserForms_AddMappingData]...';


GO
create PROCEDURE [dbo].[Proc_UserForms_AddMappingData]
@FormId int,
@UserId int
AS 
BEGIN
Insert into UserForms(FormId,UserId)
values(@FormId,@UserId)
END
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Form] WITH CHECK CHECK CONSTRAINT [FK_Constraint_FormTypeId];

ALTER TABLE [dbo].[RolePermissions] WITH CHECK CHECK CONSTRAINT [FK_Constraint_PermissionId];

ALTER TABLE [dbo].[RolePermissions] WITH CHECK CHECK CONSTRAINT [FK_Constraint_RoleId2];

ALTER TABLE [dbo].[UserForms] WITH CHECK CHECK CONSTRAINT [FK_Constraint_FormId];

ALTER TABLE [dbo].[UserForms] WITH CHECK CHECK CONSTRAINT [FK_Constraint_UserId2];

ALTER TABLE [dbo].[UserRoles] WITH CHECK CHECK CONSTRAINT [FK_Constraint_RoleId];

ALTER TABLE [dbo].[UserRoles] WITH CHECK CHECK CONSTRAINT [FK_Constraint_UserId];


GO
PRINT N'Update complete.';


GO
